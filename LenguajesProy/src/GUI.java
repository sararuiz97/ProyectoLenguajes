
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sara Ruiz
 */
public class GUI extends javax.swing.JFrame {
    
    private int producersSize;
    private int consumersSize;
    private Producer[] producers;
    private Consumer[] consumers;
    private int producerSleepTime;
    private int consumerSleepTime;
    private int min, max;
    private int bufferSize;
    private int consumedOperationsCount;
    private Buffer buffer;
    
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jlProducer = new javax.swing.JLabel();
        jlConsumer = new javax.swing.JLabel();
        jsProducer = new javax.swing.JSpinner();
        jsConsumer = new javax.swing.JSpinner();
        jlBuffer = new javax.swing.JLabel();
        jlRango = new javax.swing.JLabel();
        jlCantidad = new javax.swing.JLabel();
        jlTiempo = new javax.swing.JLabel();
        jbInicio = new javax.swing.JButton();
        jlTareasHacer = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableHacer = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableRealizar = new javax.swing.JTable();
        jlTareasRealizar = new javax.swing.JLabel();
        jpProgresoBuffer = new javax.swing.JProgressBar();
        jsTareasRealizadas = new javax.swing.JSpinner();
        jsBuffer = new javax.swing.JSpinner();
        jsProducerTime = new javax.swing.JSpinner();
        jsConsumerTime = new javax.swing.JSpinner();
        jsMin = new javax.swing.JSpinner();
        jsMax = new javax.swing.JSpinner();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlProducer.setText("Productores");

        jlConsumer.setText("Consumidores");

        jsProducer.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 1));

        jsConsumer.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 1));

        jlBuffer.setText("Tama√±o del Buffer");

        jlRango.setText("Rango de Valores (n, m)");

        jlCantidad.setText("Cantidad");

        jlTiempo.setText("Tiempo de Espera (ms)");

        jbInicio.setText("INICIAR");
        jbInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInicioActionPerformed(evt);
            }
        });

        jlTareasHacer.setText("Tareas por Hacer");

        jTableHacer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableHacer.setEnabled(false);
        jScrollPane2.setViewportView(jTableHacer);

        jTableRealizar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTableRealizar);

        jlTareasRealizar.setText("Tareas Realizadas");

        jsTareasRealizadas.setEnabled(false);

        jsBuffer.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999999999, 1));

        jsProducerTime.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10000, 1));

        jsConsumerTime.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10000, 1));

        jsMin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999999999, 1));

        jsMax.setModel(new javax.swing.SpinnerNumberModel(1, 1, 999999999, 1));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(3);
        jTextArea1.setText("Note: Only use integers as input. \nMax range are already defined.");
        jScrollPane4.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlProducer)
                            .addComponent(jlConsumer)
                            .addComponent(jlBuffer)
                            .addComponent(jlRango))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jsMin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jsMax, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jlCantidad)
                                                .addComponent(jsConsumer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jsBuffer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jsConsumerTime, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(62, 62, 62)
                                                    .addComponent(jlTiempo)
                                                    .addGap(0, 0, Short.MAX_VALUE))))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jsProducer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(62, 62, 62)
                                            .addComponent(jsProducerTime, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jpProgresoBuffer, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jlTareasHacer))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                .addComponent(jlTareasRealizar))
                            .addComponent(jsTareasRealizadas, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(137, 137, 137))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTiempo)
                    .addComponent(jlCantidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlProducer)
                    .addComponent(jsProducer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsProducerTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlConsumer)
                    .addComponent(jsConsumer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsConsumerTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlBuffer)
                            .addComponent(jsBuffer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlRango)
                            .addComponent(jsMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jsMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)))
                .addComponent(jbInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlTareasRealizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlTareasHacer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpProgresoBuffer, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsTareasRealizadas))
                .addGap(120, 120, 120))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInicioActionPerformed
        // TODO add your handling code here:
        initial();
    }//GEN-LAST:event_jbInicioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });        
    }
    
   
    private void initial() {
        
        ExtraTableModel dtmToDo = new ExtraTableModel(0, 0);
        String headers[] = new String[] { "Produced by", "Operation"};
        dtmToDo.setColumnIdentifiers(headers);
        this.jTableHacer.setModel(dtmToDo);
        
        ExtraTableModel dtmDone = new ExtraTableModel(0, 0);
        String headersdone[] = new String[] { "Produced by", "Consumed by", "Operation", "Result"};
        dtmDone.setColumnIdentifiers(headersdone);
        this.jTableRealizar.setModel(dtmDone);
        
        
        //get values
        try {
            //this.bufferSize = Integer.parseInt(this.jtBuffer.getText());
            this.bufferSize = (Integer)this.jsBuffer.getValue();
            //this.consumerSleepTime = Integer.parseInt(this.jtConsumerTime.getText());
            //this.producerSleepTime = Integer.parseInt(this.jtProducerTime.getText());
            this.consumerSleepTime = (Integer) this.jsConsumerTime.getValue();
            this.producerSleepTime = (Integer) this.jsProducerTime.getValue();
            this.consumersSize = (Integer) this.jsConsumer.getValue();
            this.producersSize = (Integer) this.jsProducer.getValue();
            //this.max = Integer.parseInt(this.jtfRangoMax.getText());
            //this.min = Integer.parseInt(this.jtfRangoMin.getText());
            this.max = (Integer) this.jsMax.getValue();
            this.min = (Integer) this.jsMin.getValue();
            
            System.out.println(this.bufferSize);
            if(this.min > this.max) {
                JOptionPane.showMessageDialog(null, "MIN IS GREATER THAN MAX, VALUES WERE EXCHANGED");
                int val = 0;
                val = this.max;
                this.max = this.min;
                this.min = val;
                this.jsMax.setValue(this.max);
                this.jsMin.setValue(this.min);
            }
            
        } catch(NumberFormatException nfex){
            JOptionPane.showMessageDialog(null, "ONLY INTEGERS AS IMPUT");
        }
        
        System.out.println("Iniciando consumidores y productores");
        System.out.println("sleep times " + this.producerSleepTime + " " + this.consumerSleepTime);
        System.out.println();
        this.buffer = new Buffer(this.bufferSize, this);
        this.producers = new Producer[this.producersSize];
        this.consumers = new Consumer[this.consumersSize];
        
        for(int i = 0; i < this.producersSize; i++) {
            this.producers[i] = new Producer
                                (i + 1,
                                this.buffer, 
                                this.min,
                                this.max,
                                this.producerSleepTime, 
                                this);
            this.producers[i].start();
        }
        
        for(int i = 0; i < this.consumersSize; i++) {
            this.consumers[i] = new Consumer(i + 1, this.buffer, this.consumerSleepTime, this);
            this.consumers[i].start();
        }
    }
    public synchronized void updateProgressBar (int value) {
        this.jpProgresoBuffer.setValue(value);
    }
    
    public synchronized void addRowToDo(String[] op){
        ExtraTableModel dtm = (ExtraTableModel)this.jTableHacer.getModel();
        dtm.addRow(new Object[] {""+op[3] +"", "(" + op[0] + " " + op[1] + " " + op[2] +")"} );
    }
    
    public synchronized void addRowDone(int idConsumer, String[] op, String result){
        this.consumedOperationsCount += 1;
        ExtraTableModel dtm = (ExtraTableModel)this.jTableRealizar.getModel();
        dtm.addRow(new Object[] {""+op[3] +"", idConsumer, "(" + op[0] + " " + op[1] + " " + op[2] + ")", result} );
        this.jsTareasRealizadas.setValue(this.consumedOperationsCount);
    }
    
    public synchronized void removeRowToDo(){
        try {
            ExtraTableModel dtm = (ExtraTableModel) this.jTableHacer.getModel();
            if (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
            }
            
        } catch(ArrayIndexOutOfBoundsException ex) {
            System.out.println(ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableHacer;
    private javax.swing.JTable jTableRealizar;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbInicio;
    private javax.swing.JLabel jlBuffer;
    private javax.swing.JLabel jlCantidad;
    private javax.swing.JLabel jlConsumer;
    private javax.swing.JLabel jlProducer;
    private javax.swing.JLabel jlRango;
    private javax.swing.JLabel jlTareasHacer;
    private javax.swing.JLabel jlTareasRealizar;
    private javax.swing.JLabel jlTiempo;
    private javax.swing.JProgressBar jpProgresoBuffer;
    private javax.swing.JSpinner jsBuffer;
    private javax.swing.JSpinner jsConsumer;
    private javax.swing.JSpinner jsConsumerTime;
    private javax.swing.JSpinner jsMax;
    private javax.swing.JSpinner jsMin;
    private javax.swing.JSpinner jsProducer;
    private javax.swing.JSpinner jsProducerTime;
    private javax.swing.JSpinner jsTareasRealizadas;
    // End of variables declaration//GEN-END:variables
}
